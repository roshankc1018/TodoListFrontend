{"version":3,"file":"filter.directive.d.ts","sources":["filter.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { OnInit, OnDestroy } from '@angular/core';\nimport { FilterableComponent } from './filterable-component';\nimport { DropDownFilterSettings } from './filter-settings';\n/**\n * Implements an event handler for the `filterChange` event of a DropDowns component\n * which performs simple data filtering.\n *\n * @example\n * ```ts\n * _@Component({\n * selector: 'my-app',\n * template: `\n *  <kendo-autocomplete\n *      [data]=\"data\"\n *      kendoDropDownFilter\n *      placeholder=\"e.g. Andorra\"\n *  >\n *  </kendo-autocomplete>\n * `\n * })\n * class AppComponent {\n *     public data: Array<string> = [\"Albania\", \"Andorra\", \"Armenia\", \"Austria\", \"Azerbaijan\"];\n * }\n * ```\n */\nexport declare class FilterDirective implements OnInit, OnDestroy {\n    private component;\n    /**\n     * The initial data that will be used as a source array for the filtering operations.\n     */\n    data: any[];\n    /**\n     * The configuration object which sets the behavior of the `kendoDropDownFilter` directive.\n     * If no [DropDownFilterSettings]({% slug api_dropdowns_dropdownfiltersettings %}) object is provided to this input, the directive will use the default interface settings.\n     */\n    rawSettings: DropDownFilterSettings | string;\n    /**\n     * @hidden\n     *\n     * Sets whether the filtering functionality is enabled on component init.\n     */\n    filterable: boolean;\n    private _data;\n    private filterChangeSubscription;\n    constructor(component: FilterableComponent);\n    ngOnInit(): void;\n    ngOnDestroy(): void;\n    private handleFilterChange;\n    private matchesAnyField;\n    private checkItem;\n    private normalizeValue;\n    private getFilterFields;\n    private readonly filterSettings;\n}\n"]}