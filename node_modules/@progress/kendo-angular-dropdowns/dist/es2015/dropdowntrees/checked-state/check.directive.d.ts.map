{"version":3,"file":"check.directive.d.ts","sources":["check.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { EventEmitter, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\nimport { TreeViewComponent } from '@progress/kendo-angular-treeview';\nimport { CheckedItem } from './checked-item';\nimport { MultiSelectTreeCheckableSettings } from './checkable-settings';\n/**\n * @hidden\n *\n * A directive which manages the in-memory checked state of the MultiSelectTree nodes.\n */\nexport declare class CheckDirective implements OnChanges, OnDestroy {\n    private treeView;\n    /**\n     * Specifies whether items should be checked on click,\n     * and whether checking a node will also check the node children as well.\n     * The `checkChildren` prop also enables or disables parent item checking (i.e. checking all child items automatically checks the parent).\n     */\n    checkable: MultiSelectTreeCheckableSettings;\n    /**\n     * The item key/keys by which the data items will be compared.\n     */\n    valueField: string | string[];\n    /**\n     * Defines the collection that will store the full checked items.\n     */\n    checkedItems: CheckedItem[];\n    /**\n     * Fires when the `checkedItems` collection was updated.\n     */\n    checkedItemsChange: EventEmitter<CheckedItem[]>;\n    /**\n     * Holds a Set with just the checked item keys.\n     *\n     * Should be updated each time the `checkedItems` value or content is changed.\n     * Can be used for efficient look-up of whether an item is checked or not (O(1) access time).\n     */\n    private checkedKeys;\n    private subscriptions;\n    private clickSubscription;\n    constructor(treeView: TreeViewComponent);\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    private getCheckedState;\n    private handleCheckedChange;\n    private toggleCheckOnClick;\n    private unsubscribeClick;\n    private checkNode;\n    private checkParents;\n    private addItem;\n    private removeItem;\n    private isItemChecked;\n    private isItemIndeterminate;\n}\n"]}