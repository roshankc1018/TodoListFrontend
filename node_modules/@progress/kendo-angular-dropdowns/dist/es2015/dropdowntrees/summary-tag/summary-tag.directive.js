/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { Directive, Input } from '@angular/core';
import { isPresent, parseNumber } from '../../common/util';
import { MultiSelectTreeComponent } from '../multiselecttree.component';
/**
 * A directive which configures the MultiSelectTree to show one single summary tag for all selected data items.
 * When a number is provided, the summary tag is displayed after the given amount of data items are selected
 * ([more information and examples]({% slug api_dropdowns_multiselecttreesummarytagdirective %})).
 *
 * @example
 * ```ts-no-run
 * <kendo-multiselecttree kendoMultiSelectTreeSummaryTag [data]="data"></kendo-multiselecttree>
 * ```
 *
 * @example
 * ```ts-no-run
 * <kendo-multiselecttree [kendoMultiSelectTreeSummaryTag]="2" [data]="data"></kendo-multiselecttree>
 * ```
 */
let MultiSelectTreeSummaryTagDirective = class MultiSelectTreeSummaryTagDirective {
    constructor(multiSelectTreeComponent) {
        this.multiSelectTreeComponent = multiSelectTreeComponent;
        /**
         * A numeric value that indicates the number of selected data items after which the summary tag will appear.
         */
        this.showAfter = 0;
        this.createTagMapper();
    }
    ngOnChanges(changes) {
        if (isPresent(changes.showAfter)) {
            this.createTagMapper();
            this.multiSelectTreeComponent.handleTagMapperChange(this.showAfter);
        }
    }
    createTagMapper() {
        const showAfter = parseNumber(this.showAfter);
        this.multiSelectTreeComponent.tagMapper = (tags) => {
            if (tags.length > showAfter) {
                // tags provided in an array are rendered as a single group tag
                return [...tags.slice(0, showAfter), tags.slice(showAfter)];
            }
            else {
                return tags;
            }
        };
    }
};
tslib_1.__decorate([
    Input('kendoMultiSelectTreeSummaryTag'),
    tslib_1.__metadata("design:type", Object)
], MultiSelectTreeSummaryTagDirective.prototype, "showAfter", void 0);
MultiSelectTreeSummaryTagDirective = tslib_1.__decorate([
    Directive({
        selector: '[kendoMultiSelectTreeSummaryTag]'
    }),
    tslib_1.__metadata("design:paramtypes", [MultiSelectTreeComponent])
], MultiSelectTreeSummaryTagDirective);
export { MultiSelectTreeSummaryTagDirective };
