{"version":3,"file":"label.component.d.ts","sources":["label.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { AfterContentInit, ElementRef, Renderer2 } from '@angular/core';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\nimport { LabelDirective } from './../label.directive';\n/**\n * Represents the [Kendo UI Label component for Angular]({% slug label_basic %}).\n *\n * Associates a label with input elements or components.\n *\n * @example\n * ```ts\n *\n * _@Component({\n *   selector: 'my-app',\n *   template: `\n *     <kendo-label [for]=\"input\" text=\"First name\">\n *       <input [(ngModel)]=\"name\" kendoTextBox #input />\n *     </kendo-label>\n *   `\n * })\n * class AppComponent {\n *     public name = 'John';\n * }\n *\n * ```\n */\nexport declare class LabelComponent implements AfterContentInit {\n    private elementRef;\n    private renderer;\n    private localization;\n    /**\n     * @hidden\n     */\n    direction: string;\n    /**\n     * Specifies the text content of the label which describes the input.\n     */\n    text: string;\n    /**\n     * Associates the label with a component by a template reference, or with an HTML element by id.\n     */\n    for: any;\n    /**\n     * Allows marking a form field as optional. By default renders the `Optional` text when enabled.\n     * The text can be customized by providing a custom message ([see example]({% slug label_globalization %}#toc-custom-messages)).\n     *\n     * The default value is `false`.\n     */\n    optional: boolean;\n    labelDirective: LabelDirective;\n    kendoInput: any;\n    /**\n     * @hidden\n     */\n    control: string | {\n        focus: Function;\n    };\n    private subscriptions;\n    constructor(elementRef: ElementRef, renderer: Renderer2, localization: LocalizationService);\n    /**\n     * @hidden\n     */\n    ngAfterContentInit(): void;\n    /**\n     * @hidden\n     */\n    ngOnInit(): void;\n    /**\n     * @hidden\n     */\n    ngAfterViewInit(): void;\n    /**\n     * @hidden\n     */\n    ngOnDestroy(): void;\n    /**\n     * @hidden\n     */\n    textFor(key: string): string;\n}\n"]}