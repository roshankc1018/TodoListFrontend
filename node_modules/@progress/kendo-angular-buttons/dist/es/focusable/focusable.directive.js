/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { Directive, Input, ElementRef, Renderer2 } from '@angular/core';
import { FocusService } from './focus.service';
import { isDocumentAvailable } from '@progress/kendo-angular-common';
/**
 * @hidden
 */
var FocusableDirective = /** @class */ (function () {
    function FocusableDirective(focusService, elementRef, renderer) {
        this.focusService = focusService;
        this.renderer = renderer;
        this.element = elementRef.nativeElement;
        this.subscribeEvents();
    }
    FocusableDirective.prototype.ngOnInit = function () {
        if (this.index === this.focusService.focused) {
            this.renderer.addClass(this.element, 'k-state-focused');
        }
        else {
            this.renderer.removeClass(this.element, 'k-state-focused');
        }
    };
    /**
     * @hidden
     */
    FocusableDirective.prototype.ngOnDestroy = function () {
        this.unsubscribeEvents();
    };
    FocusableDirective.prototype.subscribeEvents = function () {
        var _this = this;
        if (!isDocumentAvailable()) {
            return;
        }
        this.focusSubscription = this.focusService.onFocus.subscribe(function (index) {
            if (_this.index === index) {
                _this.renderer.addClass(_this.element, 'k-state-focused');
                _this.element.focus();
            }
            else {
                _this.renderer.removeClass(_this.element, 'k-state-focused');
            }
        });
    };
    FocusableDirective.prototype.unsubscribeEvents = function () {
        if (!isDocumentAvailable()) {
            return;
        }
        if (this.focusSubscription) {
            this.focusSubscription.unsubscribe();
        }
    };
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Number)
    ], FocusableDirective.prototype, "index", void 0);
    FocusableDirective = tslib_1.__decorate([
        Directive({
            selector: '[kendoButtonFocusable]'
        }),
        tslib_1.__metadata("design:paramtypes", [FocusService, ElementRef, Renderer2])
    ], FocusableDirective);
    return FocusableDirective;
}());
export { FocusableDirective };
