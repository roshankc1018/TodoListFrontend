{"version":3,"file":"datepicker.component.d.ts","sources":["datepicker.component.d.ts"],"names":[],"mappingssourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { ChangeDetectorRef, ElementRef, TemplateRef, EventEmitter, Renderer2, ViewContainerRef, NgZone, OnInit, OnChanges, OnDestroy, Injector } from '@angular/core';\nimport { AbstractControl, ControlValueAccessor, Validator } from '@angular/forms';\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\nimport { PopupService, PopupRef } from '@progress/kendo-angular-popup';\nimport { Day } from '@progress/kendo-date-math';\nimport { FormatSettings } from '../dateinput/models/format-settings.model';\nimport { PopupSettings } from '../popup-settings.model';\nimport { PreventableEvent } from '../preventable-event';\nimport { CalendarView } from '../calendar/models/view.type';\nimport { CalendarType } from '../calendar/models/type';\nimport { CellTemplateDirective } from '../calendar/templates/cell-template.directive';\nimport { MonthCellTemplateDirective } from '../calendar/templates/month-cell-template.directive';\nimport { YearCellTemplateDirective } from '../calendar/templates/year-cell-template.directive';\nimport { DecadeCellTemplateDirective } from '../calendar/templates/decade-cell-template.directive';\nimport { CenturyCellTemplateDirective } from '../calendar/templates/century-cell-template.directive';\nimport { WeekNumberCellTemplateDirective } from '../calendar/templates/weeknumber-cell-template.directive';\nimport { HeaderTitleTemplateDirective } from '../calendar/templates/header-title-template.directive';\nimport { NavigationItemTemplateDirective } from '../calendar/templates/navigation-item-template.directive';\nimport { PickerService } from '../common/picker.service';\nimport { DisabledDatesService } from '../calendar/services/disabled-dates.service';\nimport { DateInputFormatPlaceholder } from '../dateinput/models/format-placeholder.model';\nimport { DateInputComponent } from '../dateinput/dateinput.component';\n/**\n * Represents the [Kendo UI DatePicker component for Angular]({% slug overview_datepicker %}#toc-basic-usage).\n */\nexport declare class DatePickerComponent implements ControlValueAccessor, OnInit, OnChanges, OnDestroy, Validator {\n    zone: NgZone;\n    localization: LocalizationService;\n    private cdr;\n    private popupService;\n    private element;\n    private renderer;\n    private injector;\n    private pickerService;\n    private disabledDatesService;\n    private touchEnabled;\n    container: ViewContainerRef;\n    popupTemplate: TemplateRef<any>;\n    wrapper: ElementRef;\n    /**\n     * @hidden\n     */\n    cellTemplate: CellTemplateDirective;\n    /**\n     * @hidden\n     */\n    cellTemplateRef: CellTemplateDirective;\n    /**\n     * @hidden\n     */\n    monthCellTemplate: MonthCellTemplateDirective;\n    /**\n     * @hidden\n     */\n    monthCellTemplateRef: MonthCellTemplateDirective;\n    /**\n     * @hidden\n     */\n    yearCellTemplate: YearCellTemplateDirective;\n    /**\n     * @hidden\n     */\n    yearCellTemplateRef: YearCellTemplateDirective;\n    /**\n     * @hidden\n     */\n    decadeCellTemplate: DecadeCellTemplateDirective;\n    /**\n     * @hidden\n     */\n    decadeCellTemplateRef: DecadeCellTemplateDirective;\n    /**\n     * @hidden\n     */\n    centuryCellTemplate: CenturyCellTemplateDirective;\n    /**\n     * @hidden\n     */\n    centuryCellTemplateRef: CenturyCellTemplateDirective;\n    /**\n     * @hidden\n     */\n    weekNumberTemplate: WeekNumberCellTemplateDirective;\n    /**\n     * @hidden\n     */\n    weekNumberTemplateRef: WeekNumberCellTemplateDirective;\n    /**\n     * @hidden\n     */\n    headerTitleTemplate: HeaderTitleTemplateDirective;\n    /**\n     * @hidden\n     */\n    headerTitleTemplateRef: HeaderTitleTemplateDirective;\n    /**\n     * @hidden\n     */\n    navigationItemTemplate: NavigationItemTemplateDirective;\n    /**\n     * @hidden\n     */\n    navigationItemTemplateRef: NavigationItemTemplateDirective;\n    /**\n     * @hidden\n     */\n    focusableId: string;\n    /**\n     * Defines the active view that the Calendar initially renders\n     * ([see example]({% slug activeview_datepicker %})).\n     * By default, the active view is `month`.\n     *\n     * > You have to set `activeView` within the `topView`-`bottomView` range.\n     */\n    activeView: CalendarView;\n    /**\n     * Defines the bottommost Calendar view to which the user can navigate\n     * ([see example]({% slug dates_datepicker %}#toc-partial-dates)).\n     */\n    bottomView: CalendarView;\n    /**\n     * Defines the topmost Calendar view to which the user can navigate\n     * ([see example]({% slug dates_datepicker %}#toc-partial-dates)).\n     */\n    topView: CalendarView;\n    /**\n     * Specifies the Calendar type.\n     *\n     * The possible values are:\n     * - `infinite` (default)\n     * - `classic`\n     *\n     */\n    calendarType: CalendarType;\n    /**\n     * Determines whether to enable animation when navigating to previous/next Calendar view.\n     * Applies to the [`classic`]({% slug api_dateinputs_datepickercomponent %}#toc-calendartype) Calendar only.\n     *\n     * > This feature uses the [Web Animations API](https://developer.mozilla.org/en-US/docs/Web/API/Web_Animations_API). In order to run the animation in browsers that do not support it, you need the `web-animations-js` polyfill.\n     *\n     * @default false\n     */\n    animateCalendarNavigation: boolean;\n    /**\n     * Sets or gets the `disabled` property of the DatePicker and determines whether the component is active\n     * ([see example]({% slug disabled_datepicker %})).\n     */\n    disabled: boolean;\n    /**\n     * Sets the read-only state of the DatePicker\n     * ([see example]({% slug readonly_datepicker %}#toc-read-only-datepicker)).\n     */\n    readonly: boolean;\n    /**\n     * Sets the read-only state of the DatePicker input field\n     * ([see example]({% slug readonly_datepicker %}#toc-read-only-input)).\n     *\n     * > Note that if you set the [`readonly`]({% slug api_dateinputs_datepickercomponent %}#toc-readonly) property value to `true`,\n     * the input will be rendered in a read-only state regardless of the `readOnlyInput` value.\n     */\n    readOnlyInput: boolean;\n    /**\n     * Configures the popup options of the DatePicker.\n     *\n     * The available options are:\n     * - `animate: Boolean`&mdash;Controls the popup animation. By default, the open and close animations are enabled.\n     * - `appendTo: 'root' | 'component' | ViewContainerRef`&mdash;Controls the popup container. By default, the popup will be appended to the root component.\n     * - `popupClass: String`&mdash;Specifies a list of CSS classes that are used to style the popup.\n     */\n    popupSettings: PopupSettings;\n    /**\n     * Sets or gets the `navigation` property of the Calendar\n     * and determines whether the navigation side-bar is displayed.\n     * ([see example]({% slug sidebar_datepicker %})).\n     */\n    navigation: boolean;\n    /**\n     * Specifies the smallest valid date\n     * ([see example]({% slug dateranges_datepicker %})).\n     */\n    min: Date;\n    /**\n     * Specifies the biggest valid date\n     * ([see example]({% slug dateranges_datepicker %})).\n     */\n    max: Date;\n    /**\n     * Determines whether the built-in validation for incomplete dates is to be enforced when a form is being validated.\n     */\n    incompleteDateValidation: boolean;\n    /**\n     * Specifies the focused date of the Calendar component\n     * ([see example]({% slug dates_datepicker %})).\n     */\n    focusedDate: Date;\n    /**\n     * Specifies the value of the DatePicker component.\n     *\n     * > The `value` has to be a valid\n     * [JavaScript `Date`](https://developer.mozilla.org/en/docs/Web/JavaScript/Reference/Global_Objects/Date) instance.\n     */\n    value: Date;\n    /**\n     * Specifies the date format that is used to display the input value\n     * ([see example]({% slug formats_datepicker %})).\n     *\n     * Format value options:\n     * - `string` - Provide a `string` if a single format is going to be used regardless whether the input is focused or blurred.\n     * - [`FormatSettings`]({% slug api_dateinputs_formatsettings %}) - To display different formats when the component is focused or blurred, provide a settings object with specified `inputFormat` and `displayFormat` values.\n     */\n    format: string | FormatSettings;\n    /**\n     * The maximum year to assume to be from the current century when typing two-digit year value\n     * ([see example]({% slug formats_datepicker %}#toc-two-digit-year-format)).\n     *\n     * The default value is 68, indicating that typing any value less than 69\n     * will be assumed to be 20xx, while 69 and larger will be assumed to be 19xx.\n     */\n    twoDigitYearMax: number;\n    /**\n     * Defines the descriptions of the format sections in the input field.\n     * ([more information and examples]({% slug placeholders_datepicker %})).\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     * <div class=\"row example-wrapper\" style=\"min-height: 450px;\">\n     *  <div class=\"col-xs-12 col-md-6 example-col\">\n     *    <p>Full-length format description:</p>\n     *    <kendo-datepicker formatPlaceholder=\"wide\"></kendo-datepicker>\n     *  </div>\n     *\n     *  <div class=\"col-xs-12 col-md-6 example-col\">\n     *    <p>Narrow-length format description:</p>\n     *    <kendo-datepicker formatPlaceholder=\"narrow\"></kendo-datepicker>\n     *  </div>\n     *\n     *  <div class=\"col-xs-12 col-md-6 example-col\">\n     *    <p>Short-length format description:</p>\n     *    <kendo-datepicker formatPlaceholder=\"short\"></kendo-datepicker>\n     *  </div>\n     *\n     *  <div class=\"col-xs-12 col-md-6 example-col\">\n     *    <p>Display defined format:</p>\n     *    <kendo-datepicker format=\"MM/dd/yyyy\" formatPlaceholder=\"formatPattern\"></kendo-datepicker>\n     *  </div>\n     *\n     *  <div class=\"col-xs-12 col-md-6 example-col\">\n     *    <p>Custom defined format descriptions</p>\n     *    <kendo-datepicker format=\"MM/dd/yyyy\"\n     *      [formatPlaceholder]=\"{ year: 'y', month: 'M', day: 'd' }\"\n     *    ></kendo-datepicker>\n     *  </div>\n     * </div>\n     * `\n     * })\n     * export class AppComponent { }\n     * ```\n     */\n    formatPlaceholder: DateInputFormatPlaceholder;\n    /**\n     * Specifies the hint the DatePicker displays when its value is `null`.\n     * ([more information and exaples]({% slug placeholders_datepicker %})).\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-datepicker placeholder=\"Enter birth date...\"></kendo-datepicker>\n     * `\n     * })\n     * export class AppComponent { }\n     * ```\n     */\n    placeholder: string;\n    /**\n     * Sets or gets the `tabindex` property of the DatePicker.\n     */\n    tabindex: number;\n    /**\n     * @hidden\n     */\n    tabIndex: number;\n    /**\n     * Sets the dates of the DatePicker that will be disabled\n     * ([see example]({% slug disabled_dates_datepicker %})).\n     */\n    disabledDates: ((date: Date) => boolean) | Date[] | Day[];\n    /**\n     * Sets the title of the input element of the DatePicker.\n     */\n    title: string;\n    /**\n     * Determines whether the built-in min or max validators are enforced when validating a form.\n     */\n    rangeValidation: boolean;\n    /**\n     * Determines whether the built-in validator for disabled\n     * date ranges is enforced when validating a form\n     * ([see example]({% slug disabled_dates_datepicker %}#toc-validation)).\n     */\n    disabledDatesValidation: boolean;\n    /**\n     * Determines whether to display a week number column in the `month` view of the Calendar\n     * ([see example]({% slug weeknumcolumn_datepicker %})).\n     */\n    weekNumber: boolean;\n    /**\n     * Fires each time the user selects a new value\n     * ([more information and example]({% slug overview_datepicker %}#toc-events)).\n     */\n    valueChange: EventEmitter<Date>;\n    /**\n     * Fires each time the user focuses the input element\n     * ([more information and example]({% slug overview_datepicker %}#toc-events)).\n     *\n     * > To wire the event programmatically, use the `onFocus` property.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-datepicker (focus)=\"handleFocus()\"></kendo-datepicker>\n     * `\n     * })\n     * export class AppComponent {\n     *   public handleFocus(): void {\n     *      console.log(\"Component is focused\");\n     *   }\n     * }\n     * ```\n     */\n    onFocus: EventEmitter<any>;\n    /**\n     * Fires each time the input element gets blurred\n     * ([more information and example]({% slug overview_datepicker %}#toc-events)).\n     *\n     * > To wire the event programmatically, use the `onBlur` property.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <kendo-datepicker (blur)=\"handleBlur()\"></kendo-datepicker>\n     * `\n     * })\n     * export class AppComponent {\n     *   public handleBlur(): void {\n     *      console.log(\"Component is blurred\");\n     *   }\n     * }\n     * ```\n     */\n    onBlur: EventEmitter<any>;\n    /**\n     * Fires each time the popup is about to open.\n     * This event is preventable. If you cancel the event, the popup will remain closed\n     * ([more information and example]({% slug overview_datepicker %}#toc-events)).\n     */\n    open: EventEmitter<PreventableEvent>;\n    /**\n     * Fires each time the popup is about to close.\n     * This event is preventable. If you cancel the event, the popup will remain open\n     * ([more information and example]({% slug overview_datepicker %}#toc-events)).\n     */\n    close: EventEmitter<PreventableEvent>;\n    /**\n     * @hidden\n     */\n    wrapperClasses: boolean;\n    /**\n     * @hidden\n     */\n    readonly disabledClass: boolean;\n    /**\n     * @hidden\n     */\n    readonly inputRole: string;\n    popupUID: string;\n    popupRef: PopupRef;\n    isActive: boolean;\n    show: boolean;\n    private _popupSettings;\n    private _show;\n    private _value;\n    private _active;\n    private _disabledDates;\n    private onControlChange;\n    private onControlTouched;\n    private onValidatorChange;\n    private minValidateFn;\n    private maxValidateFn;\n    private disabledDatesValidateFn;\n    private incompleteValidator;\n    private resolvedPromise;\n    private subscription;\n    private pickerSubscriptions;\n    private localizationChangeSubscription;\n    private windowBlurSubscription;\n    private control;\n    private domEvents;\n    constructor(zone: NgZone, localization: LocalizationService, cdr: ChangeDetectorRef, popupService: PopupService, element: ElementRef, renderer: Renderer2, injector: Injector, pickerService: PickerService, disabledDatesService: DisabledDatesService, touchEnabled: boolean);\n    /**\n     * @hidden\n     * Used by the TextBoxContainer to determine if the component is empty.\n     */\n    isEmpty(): boolean;\n    /**\n     * @hidden\n     */\n    ngOnInit(): void;\n    /**\n     * @hidden\n     */\n    ngOnChanges(changes: any): void;\n    /**\n     * @hidden\n     */\n    ngOnDestroy(): void;\n    /**\n     * Returns the current open state of the popup.\n     */\n    readonly isOpen: boolean;\n    /**\n     * @hidden\n     */\n    writeValue(value: Date): void;\n    /**\n     * @hidden\n     */\n    registerOnChange(fn: any): void;\n    /**\n     * @hidden\n     */\n    registerOnTouched(fn: any): void;\n    /**\n     * @hidden\n     */\n    setDisabledState(isDisabled: boolean): void;\n    /**\n     * @hidden\n     */\n    validate(control: AbstractControl): {\n        [key: string]: any;\n    };\n    /**\n     * @hidden\n     */\n    registerOnValidatorChange(fn: Function): void;\n    /**\n     * Focuses the DatePicker component.\n     *\n     * @example\n     * ```ts\n     * _@Component({\n     * selector: 'my-app',\n     * template: `\n     *  <button (click)=\"datepicker.focus()\">Focus date picker</button>\n     *  <kendo-datepicker #datepicker></kendo-datepicker>\n     * `\n     * })\n     * export class AppComponent { }\n     * ```\n     */\n    focus(): void;\n    /**\n     * Blurs the DatePicker component.\n     */\n    blur(): void;\n    /**\n     * Toggles the visibility of the popup. If you use the `toggle` method to show or hide the popup,\n     * the `open` and `close` events do not fire.\n     *\n     * @param show - The state of the popup.\n     */\n    toggle(show?: boolean): void;\n    /**\n     * @hidden\n     */\n    handleIconClick(event: MouseEvent): void;\n    /**\n     * @hidden\n     */\n    handleMousedown(args: any): void;\n    /**\n     * @hidden\n     */\n    handleChange(value: Date): void;\n    /**\n     * @hidden\n     */\n    handleInputChange(value: Date): void;\n    /**\n     * @hidden\n     */\n    readonly popupClasses: string[];\n    /**\n     * @hidden\n     */\n    readonly appendTo: ViewContainerRef;\n    readonly input: DateInputComponent;\n    readonly calendar: any;\n    /**\n     * @hidden\n     */\n    mergeTime(value: Date): Date;\n    /**\n     * @hidden\n     */\n    handleKeydown(e: any): void;\n    private togglePopup;\n    private _toggle;\n    private focusInput;\n    private toggleFocus;\n    private verifySettings;\n    private verifyValue;\n    private bindEvents;\n    private handleFocus;\n    private handleWindowBlur;\n    private handleBlur;\n    private blurComponent;\n    private handleSameSelection;\n    private handleDateCompletenessChange;\n}\n"]}