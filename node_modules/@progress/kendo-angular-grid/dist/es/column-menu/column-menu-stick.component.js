/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { Component, ChangeDetectorRef } from '@angular/core';
import { LocalizationService } from "@progress/kendo-angular-l10n";
import { ColumnInfoService } from '../common/column-info.service';
import { ColumnMenuItemBase } from './column-menu-item-base';
/* tslint:disable:max-line-length */
/**
 * Represents a column-menu item that can be placed inside a
 * [ColumnMenuTemplate]({% slug api_grid_columnmenutemplatedirective %}) directive.
 * Allows the user to stick or unstick the columns.
 *
 * > You have to set the [ColumnMenuService]({% slug api_grid_columnmenuservice %}) that is passed by
 * > the template to the service input of the `kendo-grid-columnmenu-stick` component.
 *
 * @example
 * ```ts-preview
 *
 * _@Component({
 *     selector: 'my-app',
 *     template: `
 *       <kendo-grid [data]="data" [columnMenu]="true">
 *          <ng-template kendoGridColumnMenuTemplate let-service="service">
 *              <kendo-grid-columnmenu-stick [service]="service">
 *              </kendo-grid-columnmenu-stick>
 *          </ng-template>
 *          <kendo-grid-column field="Field1" [width]="100"></kendo-grid-column>
 *          <kendo-grid-column field="Field2" [width]="100"></kendo-grid-column>
 *       </kendo-grid>
 *     `
 * })
 *
 * class AppComponent {
 *   public data: any[] = [{ Field1: 'Foo', Field2: 'Bar' }];
 * }
 *
 * ```
 */
var ColumnMenuStickComponent = /** @class */ (function (_super) {
    tslib_1.__extends(ColumnMenuStickComponent, _super);
    function ColumnMenuStickComponent(localization, columnInfoService, changeDetector) {
        var _this = _super.call(this) || this;
        _this.localization = localization;
        _this.columnInfoService = columnInfoService;
        _this.changeDetector = changeDetector;
        return _this;
    }
    Object.defineProperty(ColumnMenuStickComponent.prototype, "text", {
        get: function () {
            return this.localization.get(this.sticky ? 'unstick' : 'stick');
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnMenuStickComponent.prototype, "icon", {
        get: function () {
            return this.sticky ? 'unstick' : 'stick';
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnMenuStickComponent.prototype, "disabled", {
        get: function () {
            return !this.sticky && this.columnInfoService.unlockedRootCount < 2;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @hidden
     */
    ColumnMenuStickComponent.prototype.toggleColumn = function () {
        this.toggleHierarchy(!this.sticky);
        this.close();
        this.changeDetector.markForCheck();
    };
    ColumnMenuStickComponent.prototype.toggleHierarchy = function (sticky) {
        var root = this.service.column;
        while (root.parent) {
            root = root.parent;
        }
        var columns = [root];
        var allChanged = [];
        while (columns.length) {
            var column = columns.shift();
            column.sticky = sticky;
            allChanged.push(column);
            if (column.hasChildren) {
                columns.push.apply(columns, column.childrenArray);
            }
        }
        this.columnInfoService.changeStuck(allChanged);
    };
    Object.defineProperty(ColumnMenuStickComponent.prototype, "sticky", {
        get: function () {
            return this.service.column.sticky;
        },
        enumerable: true,
        configurable: true
    });
    ColumnMenuStickComponent = tslib_1.__decorate([
        Component({
            selector: 'kendo-grid-columnmenu-stick',
            template: "\n       <kendo-grid-columnmenu-item [text]=\"text\" [icon]=\"icon\" (itemClick)=\"toggleColumn()\" [disabled]=\"disabled\">\n       </kendo-grid-columnmenu-item>\n    "
        }),
        tslib_1.__metadata("design:paramtypes", [LocalizationService,
            ColumnInfoService,
            ChangeDetectorRef])
    ], ColumnMenuStickComponent);
    return ColumnMenuStickComponent;
}(ColumnMenuItemBase));
export { ColumnMenuStickComponent };
