/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { Component, Input, HostBinding, QueryList, ViewChildren } from '@angular/core';
import { FilterService } from '../filter.service';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { BooleanFilterComponent } from '../boolean-filter.component';
import { guid } from '@progress/kendo-angular-common';
import { BooleanFilterRadioButtonDirective } from './filter-radio-button.directive';
import { replaceMessagePlaceholder } from '../../utils';
import { MenuTabbingService } from './menu-tabbing.service';
/**
 * Represents a Boolean-filter menu component.
 *
 * @example
 *  ```html-no-run
 *      <kendo-grid-column field="Discontinued" title="Discontinued">
 *          <ng-template kendoGridFilterMenuTemplate let-filter let-column="column" let-filterService="filterService">
 *            <kendo-grid-boolean-filter-menu
 *                [column]="column"
 *                [filter]="filter"
 *                [filterService]="filterService"
 *                >
 *            </kendo-grid-boolean-filter-menu>
 *          </ng-template>
 *      </kendo-grid-column>
 *   ```
 */
var BooleanFilterMenuComponent = /** @class */ (function (_super) {
    tslib_1.__extends(BooleanFilterMenuComponent, _super);
    function BooleanFilterMenuComponent(localization) {
        var _this = _super.call(this, null, localization) || this;
        /**
         * The current menu filter.
         * @type {CompositeFilterDescriptor}
         */
        _this.filter = { filters: [], logic: "and" };
        _this.idPrefix = guid();
        return _this;
    }
    Object.defineProperty(BooleanFilterMenuComponent.prototype, "hostClasses", {
        /**
         * @hidden
         */
        get: function () {
            return false;
        },
        enumerable: true,
        configurable: true
    });
    BooleanFilterMenuComponent.prototype.ngAfterViewInit = function () {
        this.filterService.menuTabbingService.firstFocusable = this.radioButtons.first.radioButtonEl;
        this.radioButtons.first.radioButtonEl.focus();
    };
    /**
     * @hidden
     */
    BooleanFilterMenuComponent.prototype.radioId = function (value) {
        return this.idPrefix + "_" + value;
    };
    /**
     * @hidden
     */
    BooleanFilterMenuComponent.prototype.onChange = function (value, input) {
        this.applyFilter(this.updateFilter({
            field: this.column.field,
            operator: "eq",
            value: value
        }));
        this.filterService.menuTabbingService.firstFocusable = input;
    };
    /**
     * @hidden
     */
    BooleanFilterMenuComponent.prototype.isSelected = function (radioValue) {
        return this.filtersByField(this.column.field).some(function (_a) {
            var value = _a.value;
            return value === radioValue;
        });
    };
    /**
     * @hidden
     */
    BooleanFilterMenuComponent.prototype.onShiftTab = function (e) {
        if ((!this.menuTabbingService || !this.menuTabbingService.isColumnMenu) && this.filterService.menuTabbingService.lastFocusable) {
            e.preventDefault();
            this.filterService.menuTabbingService.lastFocusable.focus();
        }
    };
    Object.defineProperty(BooleanFilterMenuComponent.prototype, "columnLabel", {
        /**
         * @hidden
         */
        get: function () {
            var localizationMsg = this.localization.get('filterInputLabel') || '';
            var columnName = this.column.title || this.column.field;
            return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);
        },
        enumerable: true,
        configurable: true
    });
    tslib_1.__decorate([
        HostBinding('class.k-filtercell'),
        tslib_1.__metadata("design:type", Boolean),
        tslib_1.__metadata("design:paramtypes", [])
    ], BooleanFilterMenuComponent.prototype, "hostClasses", null);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", Object)
    ], BooleanFilterMenuComponent.prototype, "filter", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", FilterService)
    ], BooleanFilterMenuComponent.prototype, "filterService", void 0);
    tslib_1.__decorate([
        Input(),
        tslib_1.__metadata("design:type", MenuTabbingService)
    ], BooleanFilterMenuComponent.prototype, "menuTabbingService", void 0);
    tslib_1.__decorate([
        ViewChildren(BooleanFilterRadioButtonDirective),
        tslib_1.__metadata("design:type", QueryList)
    ], BooleanFilterMenuComponent.prototype, "radioButtons", void 0);
    BooleanFilterMenuComponent = tslib_1.__decorate([
        Component({
            selector: 'kendo-grid-boolean-filter-menu',
            template: "\n        <ul class=\"k-radio-list k-reset\">\n            <li *ngFor=\"let item of items\">\n                <input type=\"radio\"\n                    kendoFilterMenuRadioButton\n                    [columnLabel]=\"columnLabel\"\n                    #input\n                    [name]=\"idPrefix\"\n                    class=\"k-radio\"\n                    [checked]=\"isSelected(item.value)\"\n                    [attr.id]=\"radioId(item.value)\"\n                    (change)=\"onChange(item.value, input)\"\n                    (keydown.shift.tab)=\"onShiftTab($event)\"\n                />\n                <label class=\"k-radio-label\" [attr.for]=\"radioId(item.value)\">{{item.text}}</label>\n            </li>\n        </ul>\n    "
        }),
        tslib_1.__metadata("design:paramtypes", [LocalizationService])
    ], BooleanFilterMenuComponent);
    return BooleanFilterMenuComponent;
}(BooleanFilterComponent));
export { BooleanFilterMenuComponent };
