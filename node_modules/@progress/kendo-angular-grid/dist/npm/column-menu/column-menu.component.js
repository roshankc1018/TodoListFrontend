/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var tslib_1 = require("tslib");
var menu_tabbing_service_1 = require("./../filtering/menu/menu-tabbing.service");
var navigation_service_1 = require("./../navigation/navigation.service");
var core_1 = require("@angular/core");
var kendo_angular_l10n_1 = require("@progress/kendo-angular-l10n");
var single_popup_service_1 = require("../common/single-popup.service");
var column_menu_service_1 = require("./column-menu.service");
var base_filter_cell_component_1 = require("../filtering/base-filter-cell.component");
var utils_1 = require("./utils");
var utils_2 = require("../utils");
var POPUP_CLASS = 'k-grid-columnmenu-popup';
/**
 * Represents the [column menu]({% slug columnmenu_grid %}) component.
 */
var ColumnMenuComponent = /** @class */ (function () {
    function ColumnMenuComponent(popupService, localization, service, navigationService) {
        this.popupService = popupService;
        this.localization = localization;
        this.service = service;
        this.navigationService = navigationService;
        /**
         * @hidden
         */
        this.standalone = true;
        /**
         * The settings for the Column Menu.
         */
        this.settings = {};
        /**
         * @hidden
         */
        this.sortable = true;
        /**
         * @hidden
         */
        this.tabIndex = '-1';
        /**
         * @hidden
         */
        this.expandedFilter = false;
        /**
         * @hidden
         */
        this.expandedColumns = false;
        /**
         * @hidden
         */
        this.expandedPosition = false;
        this.closeSubscription = service.closeMenu.subscribe(this.close.bind(this));
    }
    Object.defineProperty(ColumnMenuComponent.prototype, "isActive", {
        /**
         * @hidden
         */
        get: function () {
            var _this = this;
            return (this.hasFilter && base_filter_cell_component_1.filtersByField(this.filter, this.column.field).length > 0) ||
                (!this.sortable && this.hasSort && this.sort.find(function (descriptor) { return descriptor.field === _this.column.field; }));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnMenuComponent.prototype, "hasFilter", {
        /**
         * @hidden
         */
        get: function () {
            return utils_1.hasFilter(this.settings, this.column);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnMenuComponent.prototype, "hasSort", {
        /**
         * @hidden
         */
        get: function () {
            return utils_1.hasSort(this.settings, this.column);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnMenuComponent.prototype, "hasColumnChooser", {
        /**
         * @hidden
         */
        get: function () {
            return utils_1.hasColumnChooser(this.settings);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnMenuComponent.prototype, "hasLock", {
        /**
         * @hidden
         */
        get: function () {
            return utils_1.hasLock(this.settings, this.column);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnMenuComponent.prototype, "hasStick", {
        /**
         * @hidden
         */
        get: function () {
            return utils_1.hasStick(this.settings, this.column);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ColumnMenuComponent.prototype, "hasPosition", {
        /**
         * @hidden
         */
        get: function () {
            return utils_1.hasPosition(this.settings, this.column);
        },
        enumerable: true,
        configurable: true
    });
    ColumnMenuComponent.prototype.ngOnChanges = function () {
        this.service.column = this.column;
        this.service.sort = this.sort;
        this.service.filter = this.filter;
        this.service.sortable = this.sortable;
    };
    ColumnMenuComponent.prototype.ngOnDestroy = function () {
        this.close();
        this.closeSubscription.unsubscribe();
    };
    /**
     * @hidden
     */
    ColumnMenuComponent.prototype.toggle = function (e, anchor, template) {
        if (e) {
            e.preventDefault();
            e.stopImmediatePropagation();
        }
        this.expandedFilter = this.getExpandedState(this.settings.filter);
        this.expandedColumns = this.getExpandedState(this.settings.columnChooser);
        this.expandedPosition = this.getExpandedState(this.settings.setColumnPosition);
        this.popupRef = this.popupService.open(anchor, template, this.popupRef, POPUP_CLASS);
        if (!this.popupRef) {
            if (this.navigationService.enabled) {
                this.navigationService.focusCell(0, this.column.leafIndex);
            }
            else {
                this.anchor.nativeElement.focus();
            }
        }
    };
    /**
     * @hidden
     */
    ColumnMenuComponent.prototype.close = function () {
        this.popupService.destroy();
        this.popupRef = null;
        if (this.navigationService.enabled) {
            this.navigationService.focusCell(0, this.column.leafIndex);
        }
        else {
            this.anchor.nativeElement.focus();
        }
    };
    Object.defineProperty(ColumnMenuComponent.prototype, "columnMenuTitle", {
        /**
         * @hidden
         */
        get: function () {
            var localizationMsg = this.localization.get('columnMenu') || '';
            var columnName = this.column.title || this.column.field;
            return utils_2.replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);
        },
        enumerable: true,
        configurable: true
    });
    ColumnMenuComponent.prototype.getExpandedState = function (menuItemSettings) {
        return typeof (menuItemSettings) === 'object' ? menuItemSettings.expanded : false;
    };
    tslib_1.__decorate([
        core_1.HostBinding('class.k-grid-column-menu-standalone'),
        core_1.Input(),
        tslib_1.__metadata("design:type", Boolean)
    ], ColumnMenuComponent.prototype, "standalone", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", Object)
    ], ColumnMenuComponent.prototype, "column", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", Object)
    ], ColumnMenuComponent.prototype, "settings", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", Object)
    ], ColumnMenuComponent.prototype, "sort", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", Object)
    ], ColumnMenuComponent.prototype, "filter", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", Object)
    ], ColumnMenuComponent.prototype, "sortable", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", core_1.TemplateRef)
    ], ColumnMenuComponent.prototype, "columnMenuTemplate", void 0);
    tslib_1.__decorate([
        core_1.Input(),
        tslib_1.__metadata("design:type", String)
    ], ColumnMenuComponent.prototype, "tabIndex", void 0);
    tslib_1.__decorate([
        core_1.ViewChild('anchor', { static: true }),
        tslib_1.__metadata("design:type", core_1.ElementRef)
    ], ColumnMenuComponent.prototype, "anchor", void 0);
    tslib_1.__decorate([
        core_1.ViewChild('template', { static: true, read: core_1.TemplateRef }),
        tslib_1.__metadata("design:type", core_1.TemplateRef)
    ], ColumnMenuComponent.prototype, "template", void 0);
    ColumnMenuComponent = tslib_1.__decorate([
        core_1.Component({
            providers: [
                column_menu_service_1.ColumnMenuService,
                menu_tabbing_service_1.MenuTabbingService
            ],
            selector: 'kendo-grid-column-menu',
            template: "\n        <a #anchor\n            class=\"k-grid-column-menu k-grid-filter\"\n            [ngClass]=\"{ 'k-state-active': isActive }\"\n            (click)=\"toggle($event, anchor, template)\"\n            (keydown.enter)=\"$event.stopImmediatePropagation()\"\n            href=\"#\"\n            [tabindex]=\"tabIndex\"\n            [attr.title]=\"columnMenuTitle\">\n            <span class=\"k-icon k-i-more-vertical\"></span>\n        </a>\n        <ng-template #template>\n            <ng-container\n                [ngTemplateOutlet]=\"column.columnMenuTemplateRef || columnMenuTemplate || defaultTemplate\"\n                [ngTemplateOutletContext]=\"{ service: service, column: column }\">\n            </ng-container>\n        </ng-template>\n        <ng-template #defaultTemplate>\n            <kendo-grid-columnmenu-container\n                (keydown.escape)=\"close()\"\n                (keydown.enter)=\"$event.stopImmediatePropagation()\">\n                <kendo-grid-columnmenu-sort #sortItem [kendoGridColumnMenuItem]=\"sortItem\" *ngIf=\"hasSort\" [service]=\"service\">\n                </kendo-grid-columnmenu-sort>\n                <kendo-grid-columnmenu-lock #lockItem *ngIf=\"hasLock && !hasPosition\" [kendoGridColumnMenuItem]=\"lockItem\" [service]=\"service\">\n                </kendo-grid-columnmenu-lock>\n                <kendo-grid-columnmenu-stick #stickItem *ngIf=\"hasStick && !hasPosition\" [kendoGridColumnMenuItem]=\"stickItem\" [service]=\"service\">\n                </kendo-grid-columnmenu-stick>\n                <kendo-grid-columnmenu-position\n                    #positionItem\n                    *ngIf=\"hasPosition\"\n                    [showLock]=\"hasLock\"\n                    [showStick]=\"hasStick\"\n                    [kendoGridColumnMenuItem]=\"positionItem\"\n                    [service]=\"service\"\n                    [expanded]=\"expandedPosition\">\n                </kendo-grid-columnmenu-position>\n                <kendo-grid-columnmenu-chooser\n                    #chooserItem\n                    *ngIf=\"hasColumnChooser\"\n                    [kendoGridColumnMenuItem]=\"chooserItem\"\n                    [service]=\"service\"\n                    [expanded]=\"expandedColumns\">\n                </kendo-grid-columnmenu-chooser>\n                <kendo-grid-columnmenu-filter\n                    #filterItem\n                    *ngIf=\"hasFilter\"\n                    [kendoGridColumnMenuItem]=\"filterItem\"\n                    [service]=\"service\"\n                    [expanded]=\"expandedFilter\">\n                </kendo-grid-columnmenu-filter>\n            </kendo-grid-columnmenu-container>\n        </ng-template>\n    "
        }),
        tslib_1.__metadata("design:paramtypes", [single_popup_service_1.SinglePopupService,
            kendo_angular_l10n_1.LocalizationService,
            column_menu_service_1.ColumnMenuService,
            navigation_service_1.NavigationService])
    ], ColumnMenuComponent);
    return ColumnMenuComponent;
}());
exports.ColumnMenuComponent = ColumnMenuComponent;
