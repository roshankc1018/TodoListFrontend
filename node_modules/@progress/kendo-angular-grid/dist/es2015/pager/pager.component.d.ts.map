{"version":3,"file":"pager.component.d.ts","sources":["pager.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { LocalizationService } from '@progress/kendo-angular-l10n';\nimport { EventEmitter, OnChanges, SimpleChanges, OnInit, OnDestroy, ElementRef, Renderer2, NgZone } from '@angular/core';\nimport { PagerSettings } from './pager-settings';\nimport { PageChangeEvent } from '../data/change-event-args.interface';\nimport { PagerTemplateDirective } from './pager-template.directive';\nimport { PagerContextService } from './pager-context.service';\nimport { NavigationService } from '../navigation/navigation.service';\nimport { CellContext } from '../rendering/common/cell-context';\nimport { FocusGroup } from '../navigation/focus-group';\nimport { FocusRoot } from '../navigation/focus-root';\n/**\n * @hidden\n */\nexport declare class PagerComponent implements OnChanges, OnInit, OnDestroy {\n    private pagerContext;\n    navigationService: NavigationService;\n    private element;\n    private renderer;\n    private zone;\n    private localizationService;\n    private cellContext;\n    private focusRoot;\n    private focusGroup;\n    total: number;\n    skip: number;\n    pageSize: number;\n    options: PagerSettings | boolean;\n    template: PagerTemplateDirective;\n    pageChange: EventEmitter<PageChangeEvent>;\n    pagerWrapClass: boolean;\n    gridPagerClass: boolean;\n    widgetClass: boolean;\n    settings: PagerSettings;\n    private subscriptions;\n    private _templateContext;\n    private _isFocused;\n    readonly isFocused: boolean;\n    readonly pagerAriaLabel: string;\n    /**\n     * @hidden\n     */\n    readonly pagerLabel: string;\n    readonly focusTrapTabIndex: string;\n    onFocusIn(event: any): void;\n    onFocusOut(): void;\n    onEscape(): void;\n    onEnter(event: any): void;\n    navigateToPreviousPage(e: any): void;\n    navigateToNextPage(e: any): void;\n    navigateToFirstPage(e: any): void;\n    navigateToLastPage(e: any): void;\n    readonly totalPages: number;\n    readonly currentPage: number;\n    readonly templateContext: any;\n    constructor(pagerContext: PagerContextService, navigationService: NavigationService, element: ElementRef, renderer: Renderer2, zone: NgZone, localizationService: LocalizationService, cellContext: CellContext, focusRoot: FocusRoot, focusGroup: FocusGroup);\n    ngOnInit(): void;\n    ngDoCheck(): void;\n    ngOnChanges(changes: SimpleChanges): void;\n    ngOnDestroy(): void;\n    changePage(event: PageChangeEvent): void;\n    resizeHandler: () => void;\n    onInnerFocusIn(event: FocusEvent, position: string): void;\n    private clearResponsiveClasses;\n    private shouldTriggerPageChange;\n    private focusFirstElement;\n    private focusLastElement;\n    private updateCellContext;\n}\n"]}