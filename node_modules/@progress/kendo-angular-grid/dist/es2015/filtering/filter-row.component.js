/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { ColumnInfoService } from './../common/column-info.service';
import { Component, Input, HostBinding } from '@angular/core';
import { DetailTemplateDirective } from '../rendering/details/detail-template.directive';
import { LocalizationService } from '@progress/kendo-angular-l10n';
import { replaceMessagePlaceholder } from '../utils';
/**
 * @hidden
 */
let FilterRowComponent = class FilterRowComponent {
    constructor(localization, columnInfoService) {
        this.localization = localization;
        this.columnInfoService = columnInfoService;
        this.columns = [];
        this.groups = [];
        this.filterRowClass = true;
    }
    addStickyStyles(column) {
        const sticky = column.sticky ? this.columnInfoService.stickyColumnsStyles(column) : null;
        return Object.assign({}, sticky, column.filterStyle);
    }
    filterLabel(column) {
        const localizationMsg = this.localization.get('filterInputLabel') || '';
        const columnName = column.title || column.field;
        return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Array)
], FilterRowComponent.prototype, "columns", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], FilterRowComponent.prototype, "filter", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Array)
], FilterRowComponent.prototype, "groups", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", DetailTemplateDirective)
], FilterRowComponent.prototype, "detailTemplate", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number)
], FilterRowComponent.prototype, "logicalRowIndex", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Number)
], FilterRowComponent.prototype, "lockedColumnsCount", void 0);
tslib_1.__decorate([
    HostBinding('class.k-filter-row'),
    tslib_1.__metadata("design:type", Boolean)
], FilterRowComponent.prototype, "filterRowClass", void 0);
FilterRowComponent = tslib_1.__decorate([
    Component({
        selector: '[kendoGridFilterRow]',
        template: `
        <td
            [class.k-group-cell]="true"
            *ngFor="let g of groups"
            role="presentation">
        </td>
        <td
            [class.k-hierarchy-cell]="true"
            *ngIf="detailTemplate?.templateRef"
            role="presentation">
        </td>
        <td *ngFor="let column of columns; let columnIndex = index"
            [class.k-grid-header-sticky]="column.sticky"
            [ngStyle]="addStickyStyles(column)"
            [ngClass]="column.filterClass"
            [attr.aria-label]="filterLabel(column)"
            kendoGridFilterCell
                [column]="column"
                [filter]="filter"
            kendoGridLogicalCell
                [logicalRowIndex]="logicalRowIndex"
                [logicalColIndex]="lockedColumnsCount + columnIndex"
      ></td>
    `
    }),
    tslib_1.__metadata("design:paramtypes", [LocalizationService,
        ColumnInfoService])
], FilterRowComponent);
export { FilterRowComponent };
