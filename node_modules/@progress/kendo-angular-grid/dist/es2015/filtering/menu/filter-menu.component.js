/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { NavigationService } from './../../navigation/navigation.service';
import { Component, ElementRef, Input, TemplateRef, ViewChild } from '@angular/core';
import { FilterService } from "../filter.service";
import { ColumnComponent } from '../../columns/column.component';
import { SinglePopupService } from '../../common/single-popup.service';
import { filtersByField } from '../base-filter-cell.component';
import { LocalizationService } from "@progress/kendo-angular-l10n";
import { replaceMessagePlaceholder } from '../../utils';
/**
 * @hidden
 */
let FilterMenuComponent = class FilterMenuComponent {
    constructor(filterService, popupService, localization, navigationService) {
        this.filterService = filterService;
        this.popupService = popupService;
        this.localization = localization;
        this.navigationService = navigationService;
        this.tabIndex = '-1';
    }
    get hasFilters() {
        return filtersByField(this.filter, (this.column || {}).field).length > 0;
    }
    /**
     * @hidden
     */
    get filterLabel() {
        const localizationMsg = this.localization.get('filterMenuTitle') || '';
        const columnName = this.column.title || this.column.field;
        return replaceMessagePlaceholder(localizationMsg, 'columnName', columnName);
    }
    toggle(anchor, template) {
        this.popupRef = this.popupService.open(anchor, template, this.popupRef);
        if (!this.popupRef) {
            if (this.navigationService.enabled) {
                this.navigationService.focusCell(0, this.column.leafIndex);
            }
            else {
                this.anchor.nativeElement.focus();
            }
        }
        return false;
    }
    close() {
        this.popupService.destroy();
        if (this.navigationService.enabled) {
            this.navigationService.focusCell(0, this.column.leafIndex);
        }
        else {
            this.anchor.nativeElement.focus();
        }
    }
};
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", ColumnComponent)
], FilterMenuComponent.prototype, "column", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", Object)
], FilterMenuComponent.prototype, "filter", void 0);
tslib_1.__decorate([
    ViewChild('anchor', { static: true }),
    tslib_1.__metadata("design:type", ElementRef)
], FilterMenuComponent.prototype, "anchor", void 0);
tslib_1.__decorate([
    ViewChild('template', { static: true, read: TemplateRef }),
    tslib_1.__metadata("design:type", TemplateRef)
], FilterMenuComponent.prototype, "template", void 0);
tslib_1.__decorate([
    Input(),
    tslib_1.__metadata("design:type", String)
], FilterMenuComponent.prototype, "tabIndex", void 0);
FilterMenuComponent = tslib_1.__decorate([
    Component({
        selector: 'kendo-grid-filter-menu',
        template: `
        <a #anchor
            [ngClass]="{'k-grid-filter':true, 'k-state-active': hasFilters}"
            [tabindex]="tabIndex"
            (click)="toggle(anchor, template)"
            (keydown.enter)="$event.stopImmediatePropagation()"
            href="#"
            [attr.title]="filterLabel">
            <span class="k-icon k-i-filter"></span>
        </a>
        <ng-template #template>
            <kendo-grid-filter-menu-container
                [column]="column"
                [filter]="filter"
                (close)="close()"
                (keydown.escape)="close()"
                (keydown.enter)="$event.stopImmediatePropagation()"
                >
            </kendo-grid-filter-menu-container>
        </ng-template>
    `
    }),
    tslib_1.__metadata("design:paramtypes", [FilterService,
        SinglePopupService,
        LocalizationService,
        NavigationService])
], FilterMenuComponent);
export { FilterMenuComponent };
