/**-----------------------------------------------------------------------------------------
* Copyright Â© 2021 Progress Software Corporation. All rights reserved.
* Licensed under commercial license. See LICENSE.md in the project root for more information
*-------------------------------------------------------------------------------------------*/
import * as tslib_1 from "tslib";
import { PreventableEvent } from './preventable-event';
/**
 * Arguments for the TreeView [`nodeDrop`]({% slug api_treeview_treeviewcomponent %}#toc-nodedrop) event.
 */
var TreeItemDropEvent = /** @class */ (function (_super) {
    tslib_1.__extends(TreeItemDropEvent, _super);
    /**
     * @hidden
     */
    function TreeItemDropEvent(initializer, originalEvent) {
        var _this = _super.call(this) || this;
        /**
         * @hidden
         */
        _this.isValid = true;
        Object.assign(_this, initializer);
        _this.originalEvent = originalEvent;
        return _this;
    }
    /**
     * Specifies if the drop action should be marked as valid.
     * If set to `false`, the [`addItem`]({% slug api_treeview_treeviewcomponent %}#toc-additem) and
     * [`removeItem`]({% slug api_treeview_treeviewcomponent %}#toc-removeitem) events will not be fired and the drag clue
     * will be animated back to the source item to indicate the action is marked as invalid.
     */
    TreeItemDropEvent.prototype.setValid = function (isValid) {
        this.isValid = isValid;
    };
    return TreeItemDropEvent;
}(PreventableEvent));
export { TreeItemDropEvent };
