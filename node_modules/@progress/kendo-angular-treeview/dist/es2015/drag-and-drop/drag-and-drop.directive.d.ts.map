{"version":3,"file":"drag-and-drop.directive.d.ts","sources":["drag-and-drop.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { AfterContentInit, ElementRef, NgZone, OnDestroy } from '@angular/core';\nimport Draggable from '@telerik/kendo-draggable';\nimport { DragClueService } from './drag-clue/drag-clue.service';\nimport { DropHintService } from './drop-hint/drop-hint.service';\nimport { DragClueTemplateDirective } from './drag-clue/drag-clue-template.directive';\nimport { DropHintTemplateDirective } from './drop-hint/drop-hint-template.directive';\nimport { TreeViewComponent } from '../treeview.component';\nimport { DragAndDropScrollSettings } from './models';\n/**\n * A directive which enables the dragging and dropping items inside the current TreeView or between multiple linked TreeView component instances\n * ([see example]({% slug draganddrop_treeview %})).\n *\n * Triggers the [`nodeDragStart`]({% slug api_treeview_treeviewcomponent %}#toc-nodedragstart),\n * [`nodeDrag`]({% slug api_treeview_treeviewcomponent %}#toc-nodedrag),\n * [`nodeDrop`]({% slug api_treeview_treeviewcomponent %}#toc-nodedrop),\n * [`nodeDragEnd`]({% slug api_treeview_treeviewcomponent %}#toc-nodedragend),\n * [`addItem`]({% slug api_treeview_treeviewcomponent %}#toc-additem) and\n * [`removeItem`]({% slug api_treeview_treeviewcomponent %}#toc-removeitem)\n * events when the corresponding actions occur on the respective TreeView instance.\n */\nexport declare class DragAndDropDirective implements AfterContentInit, OnDestroy {\n    private element;\n    private zone;\n    private treeview;\n    private dragClueService;\n    private dropHintService;\n    /**\n     * Specifies whether the `removeItem` event will be fired after an item is dropped when the `ctrl` key is pressed.\n     * If enabled, the `removeItem` event will not be fired on the source TreeView\n     * ([see example]({% slug draganddrop_treeview %}#toc-multiple-treeviews)).\n     *\n     * @default false\n     */\n    allowCopy: boolean;\n    /**\n     * Specifes the TreeViewComponent instances into which dragged items from the current TreeViewComponent can be dropped\n     * ([see example]({% slug draganddrop_treeview %}#toc-multiple-treeviews)).\n     */\n    dropZoneTreeViews: TreeViewComponent[];\n    /**\n     * Specifies the distance in pixels from the initial item pointerdown event, before the dragging is initiated.\n     * The `nodeDragStart` and all consequent TreeView drag events will not be fired until the actual dragging begins.\n     *\n     * @default 5\n     */\n    startDragAfter: number;\n    /**\n     * Controlls the auto-scrolling behavior during drag-and-drop ([see example]({% slug draganddrop_treeview %}#toc-auto-scrolling)).\n     * Enbaled by default. To turn the auto-scrolling off, set this prop to `false`.\n     *\n     * By default, the scrolling will be performed by 1 pixel at every 1 millisecond, when the dragged item reaches the top or the bottom of the scrollable container.\n     * The `step` and `interval` can be overridden by providing a `DragAndDropScrollSettings` object to this prop.\n     *\n     * @default true\n     */\n    autoScroll: boolean | DragAndDropScrollSettings;\n    /**\n     * @hidden\n     */\n    dragClueTemplate: DragClueTemplateDirective;\n    /**\n     * @hidden\n     */\n    dropHintTemplate: DropHintTemplateDirective;\n    /**\n     * @hidden\n     */\n    userSelectStyle: string;\n    protected draggable: Draggable;\n    protected draggedItem: HTMLElement;\n    /**\n     * The pointer event of the last successful item pointerdown event (the draggable `press` event).\n     * Used for determining whether the `startDragAfter` distance is covered and for the `nodeDragStart` event args.\n     * Used also as a flag for whether a drag attempt is pending. Should be set to `null` once the dragging begins.\n     */\n    protected pendingDragStartEvent: PointerEvent;\n    private readonly scrollSettings;\n    /**\n     * Describes the offset of the parent element if the latter has the `transform` CSS prop applied.\n     * Transformed parents create new stacking context and the fixed children must be position based on the transformed parent.\n     * https://developer.mozilla.org/en-US/docs/Web/CSS/CSS_Positioning/Understanding_z_index/The_stacking_context\n     */\n    private containerOffset;\n    constructor(element: ElementRef<HTMLElement>, zone: NgZone, treeview: TreeViewComponent, dragClueService: DragClueService, dropHintService: DropHintService);\n    ngAfterContentInit(): void;\n    ngOnDestroy(): void;\n    /**\n     * @hidden\n     */\n    handlePress({ originalEvent }: any): void;\n    /**\n     * @hidden\n     */\n    handleDrag({ originalEvent, clientX, clientY }: any): void;\n    /**\n     * @hidden\n     */\n    handleRelease({ originalEvent, clientY }: any): void;\n    private updateDropHintState;\n    private updateDragClueState;\n    private initalizeDraggable;\n    private notifyDragStart;\n    private notifyDrag;\n    private notifyDrop;\n    private notifyDragEnd;\n    private getTargetTreeView;\n    private disableAnimationsForNextTick;\n    private shouldInitiateDragStart;\n    private initiateDragStart;\n}\n"]}