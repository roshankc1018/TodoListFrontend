{"version":3,"file":"drag-clue.service.d.ts","sources":["drag-clue.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { ViewContainerRef, TemplateRef, ComponentFactoryResolver } from '@angular/core';\nimport { DragClueComponent } from './drag-clue.component';\nimport { DragAndDropScrollSettings, DropAction } from '../models';\nimport { DragAndDropAssetService } from '../editing-services/drag-and-drop-asset.service';\nimport { TreeItemLookup } from '../../treeitem-lookup.interface';\n/**\n * @hidden\n */\nexport declare const CLUE_OFFSET: number;\n/**\n * @hidden\n */\nexport declare const RETURN_ANIMATION_DURATION: number;\n/**\n * @hidden\n */\nexport declare class DragClueService extends DragAndDropAssetService<DragClueComponent> {\n    private componentFactoryResolver;\n    private returnAnimation;\n    private scrollInterval;\n    constructor(componentFactoryResolver: ComponentFactoryResolver);\n    initialize(container: ViewContainerRef, template?: TemplateRef<any>): void;\n    ngOnDestroy(): void;\n    move(left: number, top: number): void;\n    animateDragClueToElementPosition(target: HTMLElement): void;\n    cancelReturnAnimation(): void;\n    updateDragClueData(action: DropAction, sourceItem: TreeItemLookup, destinationItem: TreeItemLookup): void;\n    updateText(text: string): void;\n    /**\n     * Triggers the first scrollable parent to scroll upwards or downwards.\n     * Uses setInterval, so should be called outside the angular zone.\n     */\n    scrollIntoView({ step, interval }: DragAndDropScrollSettings): void;\n    /**\n     * Cancels out the on-going scroll animation, if present.\n     */\n    cancelScroll(): void;\n}\n"]}