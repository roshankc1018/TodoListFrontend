{"version":3,"file":"node-template.directive.d.ts","sources":["node-template.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { TemplateRef } from \"@angular/core\";\n/**\n * Represents the template for the TreeView nodes ([more information and example]({% slug nodetemplate_treeview %})).\n * The template helps to customize the content of the nodes. To define the node template, nest an `<ng-template>`\n * tag with the `kendoTreeViewNodeTemplate` directive inside a `<kendo-treeview>` tag.\n *\n *\n * The node data item and its hierarchical index are available as context variables:\n *\n * - `let-dataItem` (`any`) - available as implicit context variable\n * - `let-index=\"index\"` (`string`)\n *\n *\n * @example\n * ```ts\n *\n *  import { Component } from '@angular/core';\n *  @Component({\n *      selector: 'my-app',\n *      template: `\n *      <kendo-treeview\n *          [nodes]=\"data\"\n *          kendoTreeViewExpandable\n *\n *          kendoTreeViewHierarchyBinding\n *          childrenField=\"items\">\n *        <ng-template kendoTreeViewNodeTemplate let-dataItem let-index=\"index\">\n *          <span [style.fontWeight]=\"dataItem.items ? 'bolder': 'normal' \">{{ index }}: {{ dataItem.text }}</span>\n *        </ng-template>\n *      </kendo-treeview>\n *    `\n *  })\n *  export class AppComponent {\n *      public data: any[] = [\n *          {\n *              text: \"Inbox\",\n *              items: [{ text: \"Read Mail\" }]\n *          },\n *          {\n *              text: \"Drafts\"\n *          },\n *          {\n *              text: \"Search Folders\",\n *              items: [\n *                  { text: \"Categorized Mail\" },\n *                  { text: \"Large Mail\" },\n *                  { text: \"Unread Mail\"}\n *              ]\n *          },\n *          { text: \"Settings\" }\n *      ];\n *  }\n *\n * ```\n */\nexport declare class NodeTemplateDirective {\n    templateRef: TemplateRef<any>;\n    constructor(templateRef: TemplateRef<any>);\n}\n"]}