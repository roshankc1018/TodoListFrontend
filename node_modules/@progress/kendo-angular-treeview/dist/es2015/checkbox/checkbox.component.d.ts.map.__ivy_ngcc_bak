{"version":3,"file":"checkbox.component.d.ts","sources":["checkbox.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { ChangeDetectorRef, DoCheck, ElementRef, EventEmitter, OnInit, Renderer2 } from '@angular/core';\nimport { CheckedState } from './checked-state';\n/**\n * @hidden\n *\n * Represents the CheckBox component of the Kendo UI TreeView for Angular.\n *\n */\nexport declare class CheckBoxComponent implements OnInit, DoCheck {\n    private element;\n    private renderer;\n    private changeDetector;\n    readonly classWrapper: boolean;\n    /**\n     * Specifies the [`id`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/id) of the component.\n     */\n    id: string;\n    /**\n     * A function that determines if node is checked.\n     */\n    isChecked: any;\n    /**\n     * The node item.\n     */\n    node: any;\n    /**\n     * The node index.\n     */\n    index: string;\n    /**\n     * Specifies the label text of the component.\n     */\n    labelText: string;\n    /**\n     * Specifies the [`tabindex`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/tabindex) of the component.\n     */\n    tabindex: number;\n    /**\n     * Fires when the user changes the check state of the component.\n     */\n    checkStateChange: EventEmitter<CheckedState>;\n    readonly indeterminate: boolean;\n    readonly checked: boolean;\n    private checkState;\n    constructor(element: ElementRef, renderer: Renderer2, changeDetector: ChangeDetectorRef);\n    ngOnInit(): void;\n    ngDoCheck(): void;\n    handleChange(e: any): void;\n}\n"]}