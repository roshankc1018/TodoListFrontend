{"version":3,"file":"select.directive.d.ts","sources":["select.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { EventEmitter, OnDestroy } from '@angular/core';\nimport { TreeViewComponent } from '../treeview.component';\nimport { SelectableSettings } from './selectable-settings';\nimport { Subscription } from 'rxjs';\nimport { TreeItem } from '../treeitem.interface';\n/**\n * A directive which manages the in-memory selection state of the TreeView node\n * ([see example]({% slug selection_treeview %})).\n */\nexport declare class SelectDirective implements OnDestroy {\n    protected treeView: TreeViewComponent;\n    /**\n     * @hidden\n     */\n    isSelected: (item: object, index: string) => boolean;\n    /**\n     * Defines the item key that will be stored in the `selectedKeys` collection.\n     */\n    selectKey: string | ((context: TreeItem) => any);\n    /**\n     * Defines the current selection mode\n     * ([see example]({% slug selection_treeview %}#toc-selection-modes)).\n     */\n    selection: boolean | SelectableSettings | string;\n    /**\n     * Defines the collection that will store the selected keys\n     * ([see example]({% slug selection_treeview %}#toc-selection-modes)).\n     */\n    selectedKeys: any[];\n    /**\n     * Fires when the `selectedKeys` collection was updated.\n     */\n    selectedKeysChange: EventEmitter<any[]>;\n    readonly getAriaMultiselectable: boolean;\n    protected subscriptions: Subscription;\n    private readonly options;\n    private selectActions;\n    private _selectedKeys;\n    constructor(treeView: TreeViewComponent);\n    ngOnDestroy(): void;\n    protected itemKey(e: any): any;\n    protected select(e: any): void;\n    protected selectSingle(node: any): void;\n    protected selectMultiple(node: any): void;\n    private notify;\n}\n"]}