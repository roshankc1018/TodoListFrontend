{"version":3,"file":"expand.directive.d.ts","sources":["expand.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { EventEmitter, OnDestroy } from '@angular/core';\nimport { ExpandableComponent } from './expandable-component';\nimport { Subscription } from 'rxjs';\nimport { TreeItem } from './treeitem.interface';\nimport { FilterExpandSettings } from './filter-expand-settings.interface';\n/**\n * @hidden\n */\ninterface ExpandTreeItem extends TreeItem {\n    expand: boolean;\n}\n/**\n * A directive which manages the expanded state of the TreeView.\n * ([see example]({% slug expandedstate_treeview %})).\n */\nexport declare class ExpandDirective implements OnDestroy {\n    protected component: ExpandableComponent;\n    /**\n     * @hidden\n     */\n    isExpanded: (item: object, index: string) => boolean;\n    /**\n     * Defines the item key that will be stored in the `expandedKeys` collection.\n     */\n    expandKey: string | ((context: TreeItem) => any);\n    /**\n     * Whether or not to auto-expand the nodes leading from the root node to each filter result.\n     * To fine-tune this behavior, pass a [`FilterExpandSettings`]({% slug api_treeview_filterexpandsettings %}) object to this input.\n     * @default false\n     */\n    expandOnFilter: boolean | FilterExpandSettings;\n    readonly filterExpandSettings: FilterExpandSettings;\n    /**\n     * Fires when the `expandedKeys` collection was updated.\n     */\n    expandedKeysChange: EventEmitter<any[]>;\n    /**\n     * Defines the collection that will store the expanded keys.\n     */\n    expandedKeys: any[];\n    protected subscriptions: Subscription;\n    private _expandedKeys;\n    private originalExpandedKeys;\n    private isFiltered;\n    constructor(component: ExpandableComponent);\n    ngOnDestroy(): void;\n    /**\n     * @hidden\n     */\n    itemKey(e: TreeItem): string;\n    protected toggleExpand({ index, dataItem, expand }: ExpandTreeItem): void;\n    private handleAutoExpand;\n    /**\n     * Fills array with the correct expand keys according to wrapper metadata.\n     */\n    private updateExpandedNodes;\n    /**\n     * Fills array with the expand key of every node.\n     */\n    private getEveryExpandKey;\n}\nexport {};\n"]}