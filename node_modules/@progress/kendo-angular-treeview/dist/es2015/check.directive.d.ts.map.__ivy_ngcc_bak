{"version":3,"file":"check.directive.d.ts","sources":["check.directive.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["/**-----------------------------------------------------------------------------------------\n* Copyright Â© 2021 Progress Software Corporation. All rights reserved.\n* Licensed under commercial license. See LICENSE.md in the project root for more information\n*-------------------------------------------------------------------------------------------*/\nimport { EventEmitter, OnDestroy, OnChanges, NgZone } from '@angular/core';\nimport { TreeViewComponent } from './treeview.component';\nimport { CheckableSettings } from './checkable-settings';\nimport { CheckedState } from './checkbox/checked-state';\nimport { Subscription } from 'rxjs';\nimport { TreeItem } from './treeitem.interface';\nimport { TreeItemLookup } from './treeitem-lookup.interface';\n/**\n * A directive which manages the in-memory checked state of the TreeView node\n * ([see example]({% slug checkboxes_treeview %})).\n */\nexport declare class CheckDirective implements OnChanges, OnDestroy {\n    protected treeView: TreeViewComponent;\n    private zone;\n    /**\n     * @hidden\n     */\n    isChecked: (item: object, index: string) => CheckedState;\n    /**\n     * Defines the item key that will be stored in the `checkedKeys` collection.\n     */\n    checkKey: string | ((context: TreeItem) => any);\n    /**\n     * Defines the collection that will store the checked keys\n     * ([see example]({% slug checkboxes_treeview %})).\n     */\n    checkedKeys: any[];\n    /**\n     * Defines the checkable settings ([see example]({% slug checkboxes_treeview %}#toc-setup)).\n     * If no value is provided, the default [`CheckableSettings`]({% slug api_treeview_checkablesettings %}) are applied.\n     */\n    checkable: boolean | CheckableSettings | string;\n    /**\n     * Fires when the `checkedKeys` collection was updated.\n     */\n    checkedKeysChange: EventEmitter<any[]>;\n    protected subscriptions: Subscription;\n    private readonly options;\n    private checkActions;\n    private _checkedKeys;\n    private clickSubscription;\n    constructor(treeView: TreeViewComponent, zone: NgZone);\n    ngOnChanges(changes: any): void;\n    ngOnDestroy(): void;\n    protected isItemChecked(dataItem: any, index: string): CheckedState;\n    protected isIndexChecked(index: string): CheckedState;\n    protected itemKey(item: TreeItem): any;\n    protected check(e: any): void;\n    protected checkSingle(node: any): void;\n    protected checkMultiple(node: TreeItemLookup): void;\n    protected toggleCheckOnClick(): void;\n    private unsubscribeClick;\n    private checkNode;\n    private checkParents;\n    private notify;\n    private addCheckedItemsChildren;\n}\n"]}